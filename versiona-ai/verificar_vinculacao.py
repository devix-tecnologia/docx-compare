#!/usr/bin/env python3
"""
Script para verificar se as modifica√ß√µes da vers√£o est√£o vinculadas √†s cl√°usulas
"""

import requests

DIRECTUS_URL = "https://contract.devix.co"
DIRECTUS_TOKEN = "S1okNXYabq9TL1gVj0TxiNEdu0md_F3d"
VERSAO_ID = "99090886-7f43-45c9-bfe4-ec6eddd6cde0"


def verificar_vinculacao():
    """Verifica quantas modifica√ß√µes t√™m cl√°usula vinculada"""

    url = f"{DIRECTUS_URL}/items/modificacao"
    headers = {"Authorization": f"Bearer {DIRECTUS_TOKEN}"}
    params = {
        "filter[versao][_eq]": VERSAO_ID,
        "fields": "id,tipo,clausula,posicao_inicio,posicao_fim",
        "limit": 50,
    }

    print(f"üîç Consultando modifica√ß√µes da vers√£o {VERSAO_ID}...")
    print("=" * 80)

    try:
        response = requests.get(url, headers=headers, params=params, timeout=10)
        response.raise_for_status()
        data = response.json()

        modificacoes = data.get("data", [])
        total = len(modificacoes)

        print(f"\nüìä TOTAL: {total} modifica√ß√µes encontradas\n")

        com_clausula = 0
        sem_clausula = 0

        for mod in modificacoes:
            mod_id = mod.get("id")
            tipo = mod.get("tipo", "?")
            clausula = mod.get("clausula")
            pos_inicio = mod.get("posicao_inicio")
            pos_fim = mod.get("posicao_fim")

            if clausula:
                com_clausula += 1
                print(
                    f"‚úÖ Mod {mod_id:3} | Tipo: {tipo:10} | Pos: {pos_inicio:6}-{pos_fim:6} | Cl√°usula ID: {clausula}"
                )
            else:
                sem_clausula += 1
                print(
                    f"‚ùå Mod {mod_id:3} | Tipo: {tipo:10} | Pos: {pos_inicio:6}-{pos_fim:6} | SEM CL√ÅUSULA"
                )

        print("\n" + "=" * 80)
        print("\nüìà RESULTADO DA VINCULA√á√ÉO:")
        print(
            f"   ‚úÖ Com cl√°usula: {com_clausula}/{total} ({com_clausula * 100 // max(total, 1)}%)"
        )
        print(
            f"   ‚ùå Sem cl√°usula: {sem_clausula}/{total} ({sem_clausula * 100 // max(total, 1)}%)"
        )

        if com_clausula > 0:
            print("\nüéâ SUCESSO! A vincula√ß√£o est√° funcionando!")
        else:
            print("\n‚ö†Ô∏è  PROBLEMA: Nenhuma modifica√ß√£o foi vinculada √†s cl√°usulas")

        return com_clausula, total

    except Exception as e:
        print(f"‚ùå Erro ao consultar: {e}")
        import traceback

        traceback.print_exc()
        return 0, 0


if __name__ == "__main__":
    verificar_vinculacao()
