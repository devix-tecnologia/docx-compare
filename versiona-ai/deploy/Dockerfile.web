# Dockerfile para Frontend Vue 3 - Produção
FROM node:22-alpine3.20 AS builder

# Instalar dependências de segurança e certificados
RUN apk update && apk upgrade && \
    apk add --no-cache \
    curl \
    ca-certificates \
    tzdata && \
    rm -rf /var/cache/apk/* /tmp/* /var/tmp/*

# Instalar pnpm globalmente
RUN npm install -g pnpm

# Criar usuário não-root para build
RUN addgroup -g 1001 -S nodeuser && \
    adduser -S -D -H -u 1001 -h /home/nodeuser -s /bin/sh -G nodeuser nodeuser

# Definir diretório e mudar para usuário não-root
WORKDIR /app
RUN chown nodeuser:nodeuser /app
USER nodeuser

# Instalar pnpm e dependências
COPY --chown=nodeuser:nodeuser web/package*.json web/pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Copiar código fonte (exceto dist que será gerado)
COPY --chown=nodeuser:nodeuser web/src/ ./src/
COPY --chown=nodeuser:nodeuser web/index.html web/vite.config.js web/tsconfig.json web/tsconfig.node.json ./

# Fazer build
RUN pnpm build:vite

# Stage de produção com imagem mais segura
FROM cgr.dev/chainguard/nginx:latest

# Copiar arquivos buildados com permissões corretas
COPY --from=builder --chown=nginx:nginx /app/dist /usr/share/nginx/html

# Copiar configuração customizada do nginx
COPY --chown=nginx:nginx deploy/nginx.conf /etc/nginx/nginx.conf

# Mudar para usuário não-root (nginx user já existe na imagem Chainguard)
USER nginx

# Expor porta não-privilegiada
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Comando padrão
CMD ["-g", "daemon off;"]
