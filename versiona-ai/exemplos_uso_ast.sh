#!/bin/bash
# Exemplos práticos de uso da integração AST

# Cores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo -e "${BLUE}Exemplos de Uso: AST vs Original no directus_server.py${NC}"
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo ""

# Exemplo 1: Processamento com AST (máxima precisão)
echo -e "${GREEN}1. Processamento com AST (59.3% precisão)${NC}"
echo -e "${YELLOW}   Use quando: precisão é crítica, documentos estruturados${NC}"
echo ""
echo "curl -X POST \"http://localhost:8001/api/process\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"versao_id\": \"322e56c0-4b38-4e62-b563-8f29a131889c\","
echo "    \"use_ast\": true"
echo "  }'"
echo ""
echo -e "${YELLOW}   Resultado esperado:${NC}"
echo "   - Total: 8 modificações"
echo "   - 4 ALTERACAO, 2 REMOCAO, 2 INSERCAO"
echo "   - Números de cláusulas auto-detectados"
echo "   - Estrutura do documento preservada"
echo ""

# Exemplo 2: Processamento tradicional (velocidade)
echo -e "${GREEN}2. Processamento Tradicional (51.9% precisão)${NC}"
echo -e "${YELLOW}   Use quando: velocidade é prioridade, documentos simples${NC}"
echo ""
echo "curl -X POST \"http://localhost:8001/api/process\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"versao_id\": \"322e56c0-4b38-4e62-b563-8f29a131889c\","
echo "    \"use_ast\": false"
echo "  }'"
echo ""
echo -e "${YELLOW}   Resultado esperado:${NC}"
echo "   - Total: 6 modificações"
echo "   - 6 ALTERACAO, 0 REMOCAO, 0 INSERCAO"
echo "   - Processamento mais rápido"
echo ""

# Exemplo 3: Processamento padrão (sem especificar use_ast)
echo -e "${GREEN}3. Processamento Padrão (default: tradicional)${NC}"
echo -e "${YELLOW}   Backward compatible - código existente continua funcionando${NC}"
echo ""
echo "curl -X POST \"http://localhost:8001/api/process\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"versao_id\": \"322e56c0-4b38-4e62-b563-8f29a131889c\""
echo "  }'"
echo ""
echo -e "${YELLOW}   Nota: use_ast=false é o padrão${NC}"
echo ""

# Exemplo 4: Uso em Python
echo -e "${GREEN}4. Uso via Python${NC}"
echo ""
echo "from directus_server import DirectusAPI"
echo ""
echo "api = DirectusAPI()"
echo ""
echo "# Com AST (recomendado)"
echo "resultado_ast = api.process_versao("
echo "    versao_id=\"322e56c0-4b38-4e62-b563-8f29a131889c\","
echo "    use_ast=True  # ← Ativa AST"
echo ")"
echo ""
echo "# Sem AST (tradicional)"
echo "resultado_original = api.process_versao("
echo "    versao_id=\"322e56c0-4b38-4e62-b563-8f29a131889c\","
echo "    use_ast=False  # ← Padrão"
echo ")"
echo ""
echo "# Comparar"
echo "print(f\"AST: {len(resultado_ast['modificacoes'])} modificações\")"
echo "print(f\"Original: {len(resultado_original['modificacoes'])} modificações\")"
echo ""

# Exemplo 5: Teste comparativo automatizado
echo -e "${GREEN}5. Teste Comparativo Automatizado${NC}"
echo -e "${YELLOW}   Compara ambas implementações lado a lado${NC}"
echo ""
echo "# Terminal 1: Iniciar servidor"
echo "uv run python versiona-ai/directus_server.py"
echo ""
echo "# Terminal 2: Executar teste"
echo "uv run python versiona-ai/test_api_ast_vs_original.py"
echo ""
echo -e "${YELLOW}   Saída mostra:${NC}"
echo "   - Comparação quantitativa (totais por tipo)"
echo "   - Diferenças entre implementações"
echo "   - Recomendação de qual usar"
echo ""

# Exemplo 6: Verificar disponibilidade AST
echo -e "${GREEN}6. Verificar Disponibilidade do AST${NC}"
echo ""
echo "# Ao iniciar servidor, verifica automaticamente:"
echo "uv run python versiona-ai/directus_server.py"
echo ""
echo -e "${YELLOW}   Output esperado:${NC}"
echo "   ✅ Implementação AST disponível (59.3% precisão)"
echo ""
echo -e "${YELLOW}   Se Pandoc não instalado:${NC}"
echo "   ⚠️ Implementação AST não disponível - apenas modo texto (51.9% precisão)"
echo ""

# Exemplo 7: Modo mock com AST
echo -e "${GREEN}7. Modo Mock com AST (para testes)${NC}"
echo ""
echo "curl -X POST \"http://localhost:8001/api/process\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"versao_id\": \"mock_001\","
echo "    \"mock\": true,"
echo "    \"use_ast\": true"
echo "  }'"
echo ""
echo -e "${YELLOW}   Nota: mock=true desabilita AST (não há arquivos DOCX mock)${NC}"
echo ""

# Exemplo 8: Processar modelo completo
echo -e "${GREEN}8. Processar Modelo Completo (todas versões)${NC}"
echo ""
echo "curl -X POST \"http://localhost:8001/api/process-modelo\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{"
echo "    \"modelo_id\": \"d2699a57-b0ff-472b-a130-626f5fc2852b\","
echo "    \"use_ast\": true"
echo "  }'"
echo ""
echo -e "${YELLOW}   Processa todas versões do modelo com AST${NC}"
echo ""

# Dicas de uso
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo -e "${BLUE}💡 DICAS DE USO${NC}"
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo ""
echo -e "${GREEN}Quando usar AST (use_ast=true):${NC}"
echo "  ✅ Documentos estruturados com cláusulas numeradas"
echo "  ✅ Precisão é crítica (contratos, documentos legais)"
echo "  ✅ Precisa detectar REMOCAO e INSERCAO separadamente"
echo "  ✅ Formatação inconsistente no documento"
echo ""
echo -e "${GREEN}Quando usar Original (use_ast=false):${NC}"
echo "  ✅ Velocidade é prioridade"
echo "  ✅ Documentos simples sem estrutura clara"
echo "  ✅ Ambiente sem Pandoc instalado"
echo "  ✅ Precisão de 51.9% é suficiente"
echo ""
echo -e "${GREEN}Checklist antes de usar AST:${NC}"
echo "  □ Pandoc instalado? (pandoc --version)"
echo "  □ directus_server_ast.py existe?"
echo "  □ Documentos são DOCX válidos?"
echo "  □ Servidor iniciou com \"✅ Implementação AST disponível\"?"
echo ""

# Métricas comparativas
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo -e "${BLUE}📊 MÉTRICAS COMPARATIVAS${NC}"
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo ""
echo "┌──────────────────────┬──────────────┬──────────────┬─────────────┐"
echo "│ Métrica              │   Original   │     AST      │   Melhoria  │"
echo "├──────────────────────┼──────────────┼──────────────┼─────────────┤"
echo "│ Precisão             │    51.9%     │    59.3%     │    +7.4%    │"
echo "│ ALTERACAO detectadas │      6       │      4       │ ✅ Correto   │"
echo "│ REMOCAO detectadas   │      0       │      2       │ ✅ Detecta   │"
echo "│ INSERCAO detectadas  │      0       │      2       │ ✅ Detecta   │"
echo "│ Estrutura preservada │      ❌       │      ✅       │ ✅ Benefício │"
echo "│ Tempo processamento  │   ~1-2s      │   ~3-5s      │ ⚠️ Mais lento│"
echo "└──────────────────────┴──────────────┴──────────────┴─────────────┘"
echo ""

# Links úteis
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo -e "${BLUE}📚 DOCUMENTAÇÃO${NC}"
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
echo ""
echo "  📄 INTEGRACAO_AST_DIRECTUS.md - Guia completo de integração"
echo "  📄 RESUMO_INTEGRACAO_AST.md - Resumo das mudanças"
echo "  📄 COMPARACAO_AST_VS_ORIGINAL.md - Comparação detalhada"
echo "  📄 API_DOCUMENTATION.md - Documentação da API"
echo ""
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════════${NC}"
