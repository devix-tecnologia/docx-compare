# Dockerfile para deploy no CapRover
# Stage 1: Build do Frontend
FROM node:22-alpine3.20 AS frontend-builder

WORKDIR /app

# Copiar package files do frontend
COPY web/package*.json web/pnpm-lock.yaml ./
RUN npm install -g pnpm && pnpm install --frozen-lockfile

# Copiar código fonte do frontend
COPY web/src/ ./src/
COPY web/index.html web/vite.config.js web/tsconfig.json web/tsconfig.node.json ./

# Build
ENV NODE_ENV=production
ENV VITE_API_BASE_URL=/api
RUN pnpm build:vite

# Stage 2: Produção com Python + Nginx + Supervisor
FROM python:3.13-slim

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    nginx \
    supervisor \
    pandoc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Criar diretórios
RUN mkdir -p /app /var/log/supervisor /var/log/nginx

# Copiar código Python
WORKDIR /app
COPY *.py ./
COPY core/ ./core/
COPY templates/ ./templates/

# Instalar dependências Python
RUN pip install --no-cache-dir \
    flask \
    flask-cors \
    requests \
    python-dotenv \
    gunicorn

# Copiar frontend buildado
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# Configurar Nginx
RUN cat > /etc/nginx/sites-available/default << 'EOF'
server {
listen 80;
root /usr/share/nginx/html;
index index.html;

access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;

# Frontend
location / {
try_files $uri $uri/ /index.html;
}

# API
location /api/ {
proxy_pass http://127.0.0.1:8001/api/;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
}

# Health check
location /health {
proxy_pass http://127.0.0.1:8001/health;
}
}
EOF

# Configurar Supervisor
RUN cat > /etc/supervisor/conf.d/supervisord.conf << 'EOF'
[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/nginx.log
stderr_logfile=/var/log/supervisor/nginx-err.log

[program:api]
command=gunicorn --bind 127.0.0.1:8001 --workers 2 --timeout 120 directus_server:app
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/api.log
stderr_logfile=/var/log/supervisor/api-err.log
environment=FLASK_ENV="production"
EOF

# Expor porta
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Iniciar Supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
