#!/usr/bin/env python3
"""
Script para mostrar o formato diff bruto gerado pelo difflib
"""

import difflib


def mostrar_diff_bruto():
    """Mostra o formato diff bruto que √© usado internamente"""

    print("üîç Mostrando formato DIFF bruto...")
    print("=" * 80)

    # Textos de exemplo
    original_text = """CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS

CONTRATANTE: Empresa ABC
CONTRATADA: Empresa XYZ

PRE√ÇMBULO
Este contrato estabelece as condi√ß√µes gerais...

DEFINI√á√ïES
Para fins deste contrato, consideram-se:

CL√ÅUSULA 1¬™ - OBJETO
O objeto deste contrato √©...

CL√ÅUSULA 1.1 - ESPECIFICA√á√ïES
As especifica√ß√µes t√©cnicas...

CL√ÅUSULA 1.2 - PRAZO
O prazo de execu√ß√£o..."""

    tagged_text = """CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS

CONTRATANTE: {{contratante}}
CONTRATADA: {{contratada}}

{{preambulo}}
Este contrato estabelece as {{condicoes_gerais}}...

{{definicoes}}
Para fins deste contrato, consideram-se:

CL√ÅUSULA {{1}} - OBJETO
O objeto deste contrato √©...

CL√ÅUSULA {{1.1}} - ESPECIFICA√á√ïES
As especifica√ß√µes t√©cnicas...

CL√ÅUSULA {{1.2}} - PRAZO
O prazo de execu√ß√£o..."""

    print("üìÑ TEXTO ORIGINAL:")
    for i, linha in enumerate(original_text.split("\n"), 1):
        print(f"{i:2d}: {linha}")

    print("\n" + "=" * 80)
    print("üè∑Ô∏è TEXTO COM TAGS:")
    for i, linha in enumerate(tagged_text.split("\n"), 1):
        print(f"{i:2d}: {linha}")

    print("\n" + "=" * 80)
    print("üîç DIFF BRUTO (unified_diff):")
    print("-" * 80)

    # Gerar diff exatamente como o c√≥digo faz
    original_lines = original_text.split("\n")
    modified_lines = tagged_text.split("\n")

    diff = list(
        difflib.unified_diff(
            original_lines,
            modified_lines,
            fromfile="Original",
            tofile="Modificado",
            lineterm="",
        )
    )

    # Mostrar cada linha do diff com numera√ß√£o
    for i, linha_diff in enumerate(diff):
        print(f"{i:2d}: {repr(linha_diff)}")

    print("\n" + "=" * 80)
    print("üîç DIFF FORMATADO PARA LEITURA:")
    print("-" * 80)

    for linha_diff in diff:
        if linha_diff.startswith("@@"):
            print(f"üìç {linha_diff}")
        elif linha_diff.startswith("---"):
            print(f"üìÑ ARQUIVO ORIGINAL: {linha_diff}")
        elif linha_diff.startswith("+++"):
            print(f"üè∑Ô∏è  ARQUIVO MODIFICADO: {linha_diff}")
        elif linha_diff.startswith("-"):
            print(f"‚ùå REMOVIDO: {linha_diff}")
        elif linha_diff.startswith("+"):
            print(f"‚úÖ ADICIONADO: {linha_diff}")
        else:
            print(f"‚û°Ô∏è  CONTEXTO: {linha_diff}")

    print("\n" + "=" * 80)
    print("üîç PROCESSAMENTO DAS LINHAS DO DIFF:")
    print("-" * 80)

    i = 0
    modification_count = 1

    while i < len(diff):
        line = diff[i]

        print(f"\nüìç Processando linha {i}: {repr(line)}")

        if line.startswith("@@") or line.startswith("---") or line.startswith("+++"):
            print("   üî∏ Cabe√ßalho do diff - ignorado")
            i += 1
            continue
        elif line.startswith("-"):
            original_content = line[1:].strip()
            if original_content:
                print(f"   üî∏ Conte√∫do removido: '{original_content}'")
                if i + 1 < len(diff) and diff[i + 1].startswith("+"):
                    modified_content = diff[i + 1][1:].strip()
                    print(f"   üî∏ Pr√≥xima linha √© adi√ß√£o: '{modified_content}'")
                    print(
                        f"   ‚û°Ô∏è  MODIFICA√á√ÉO #{modification_count}: '{original_content}' ‚Üí '{modified_content}'"
                    )
                    i += 2
                else:
                    print(
                        f"   ‚û°Ô∏è  REMO√á√ÉO #{modification_count}: '{original_content}' (sem substituto)"
                    )
                    i += 1
                modification_count += 1
            else:
                i += 1
        elif line.startswith("+"):
            added_content = line[1:].strip()
            if added_content:
                print(f"   üî∏ Conte√∫do adicionado: '{added_content}'")
                print(f"   ‚û°Ô∏è  ADI√á√ÉO #{modification_count}: '{added_content}'")
                modification_count += 1
            i += 1
        else:
            print("   üî∏ Linha de contexto - ignorada")
            i += 1


if __name__ == "__main__":
    mostrar_diff_bruto()
